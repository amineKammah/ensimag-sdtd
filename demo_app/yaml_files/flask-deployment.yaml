apiVersion: v1
kind: Service
metadata:
  name: demo-app-service
spec:
  type: "LoadBalancer"
  selector:
    app: demo-app
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
spec:
  selector:
    matchLabels:
      app: demo-app
  replicas: 1
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      containers:
      - name: demo-app
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 1
        image: kammahm/sdtd_data_processing:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_SERVER1
          value: 'kaf1:9092'
        - name: KAFKA_SERVER2
          value: 'kaf2:9092'
        command: [
            "/bin/sh",
            "-c",
            "git pull && python3 run_demo_app.py"
        ]
